---
title: "inclass-4"
---

```{r}
pacman::p_load(tidyverse,sf,httr,tmap)
```

#httr - work w html pages

```{r}
#| eval: false
#| message: false
#| code-fold: true
#| code-summary: "Show the code"
```

```{r}
url<-"https://www.onemap.gov.sg/api/common/elastic/search"

csv<-read_csv("data/aspatial/Generalinformationofschools.csv")

postcodes <- csv$postal_code

```

.x

```{r}
found <- data.frame()
not_found <- data.frame()
```

```{r}
for(postcode in postcodes){
  query <- list('searchVal' = postcode, 'returnGeom'='Y',"getAddrDetails"= 'Y', 'pageNum'='1')
  res<- GET(url,query=query)
  
  if ((content(res)$found)!=0){
    found <- rbind(found,data.frame(content(res))[4:13])
  } else{
    not_found = data.frame(postcode)
  }
}
```

```{r}
merged = merge(csv,found, by.x = 'postal_code', by.y = 'results.POSTAL',all=TRUE)
write.csv(merged,file = "data/aspatial/school.csv")
write.csv(not_found, file = "data/aspatial/not_found.csv")
getwd()

```

```{r}
mpsz <- st_read(dsn = "data/geospatial",
                layer = "MPSZ-2019") %>%
  st_transform(crs = 3414)

```

```{r}
merged <- merged %>%
  mutate(
    results.LATITUDE = ifelse(school_name == "ZHENGHUA SECONDARY SCHOOL", 1.389279, results.LATITUDE),
    results.LONGITUDE = ifelse(school_name == "ZHENGHUA SECONDARY SCHOOL", 103.7651, results.LONGITUDE)
  )

schools <- merged %>%
  rename(latitude = "results.LATITUDE", longitude = "results.LONGITUDE") %>%
  select(postal_code, school_name, latitude, longitude)

```

```{r}
#| code-fold: true
#| code-sumary: "Show the code chunk"
schools_sf <- st_as_sf(schools,
                       coords = c("longitude", "latitude"),
                       crs =4326) %>%
  st_transform(crs = 3414)
```

this step is to make sure mpsz and schools_sf are from tidysame projection/ coordinates system and both shoud be spatial objects

```{r}
tmap_mode("view")
tm_shape(schools_sf) + tm_dots() + tm_view(set.zoom.limits = c(11,14))

```

```{r}
mpsz$`SCHOOL_COUNT` <- lengths(
  st_intersects(
    mpsz, schools_sf
  )
)
```

```{r}

```
